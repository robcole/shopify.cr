#!/usr/bin/env crystal

require "http"

require "../src/shopify"

Shopify.configure do |config|
  config.redirect_uri = "http://localhost:8080/oauth/callback"
end

code_received = false

server = HTTP::Server.new do |context|
  case context.request.path
  when "/install"
    context.response.status_code = 302
    context.response.headers["Location"] = Shopify::Store.from_params(
      context.request.query_params
    ).oauth_url
    context.response.content_type = "text/plain"
    context.response.print "Redirecting to Shopify OAuth..."
  when "/oauth/callback"
    code = context.request.query_params["code"]
    store = Shopify::Store.from_params(
      context.request.query_params
    )
    context.response.content_type = "text/plain"
    context.response.print "Authorization Code: #{code}\n"
    context.response.print "Access Token: #{store.access_token}"
    puts "Authorization code received: #{code}"
    puts "#"*20
    puts "# Copy pasta"
    puts "#"*20
    puts "export SHOPIFY_ACCESS_TOKEN=\"#{store.access_token}\""
    puts "export SHOPIFY_STORE=\"#{store.shop}\""
    code_received = true
  end
end

address = server.bind_tcp 8080
puts "Set app URL to on http://#{address}/install"
puts "Set allowed redirect URI to on http://#{address}/oauth/callback"

spawn do
  loop do
    exit 0 if code_received

    puts "Waiting for Shopify OAuth..."
    sleep 5
  end
end

server.listen
